//****************************************************************************
// $Module type: Class
// $Module name: cDbComboformDataTable
// $Author     : Nils Svedmyr
// Created     : 2002-07-22 @ 09:34
//
// Description :
//
// $Rev History
//    2002-07-22  Module header created
//****************************************************************************
Use cRDSDataDictionary.pkg
Use cRDCDbComboForm.pkg

Class cDbComboformDriverIdleHandler is a cIdleHandler
    Procedure Construct_Object
        Forward Send Construct_Object
    End_Procedure

    Procedure OnIdle
        Delegate Send DoLocalUpdate
    End_Procedure
End_Class

{ OverrideProperty=Entry_State InitialValue=False }
{ OverrideProperty=Combo_Sort_State InitialValue=False }
{ OverrideProperty=Label_Row_Offset InitialValue=0 }
{ OverrideProperty=Label_Col_Offset InitialValue=2 }
{ OverrideProperty=Label_Justification_Mode InitialValue=jMode_Right }
{ OverrideProperty=Label_Justification_Mode EnumList="jMode_Right, jMode_Left, jMode_Center" }
{ OverrideProperty=Size InitialValue=13,150 }
Class cDbComboformDriver is a cRDCDbComboForm
    Procedure Construct_Object
        Forward Send Construct_Object

        Property Handle  phoDD    (Main_DD(Self))
        Property Integer piDbType EN_DbTypeDataFlex
        Property Boolean pbFrom True
        
        Property Boolean pbAutoEnable True  
        Property Handle phoIdleHandler (Create(Self, RefClass(cDbComboformDataTableIdleHandler)))

        Set Label_Justification_Mode to jMode_Right
        Set Label_Row_Offset to 0
        Set Label_Col_Offset to 2
        Set Entry_State Item 0 to False
        Set Combo_Sort_State to False
        Set Code_Display_Mode to Cb_Code_Display_Description
        Send Combo_Add_Item DATAFLEX_ID 

        On_Key kCancel      Send CancelWizard
        On_Key kClose_Panel Send CancelWizard
    End_Procedure

    Procedure End_Construct_Object
        Forward Send End_Construct_Object  
        Set Combo_Sort_State to False
    End_Procedure

    Procedure DoLocalUpdate
        Boolean bIsDbTypeChanged
        If (pbAutoEnable(Self) = False) Begin
            Procedure_Return
        End                     
        Set Enabled_State to (IsEnabled(Self))
        Get IsDbTypeChanged to bIsDbTypeChanged
        If (bIsDbTypeChanged = True) Begin
            Send DoFillData
        End
    End_Procedure  
    
    Function IsDbTypeChanged Returns Boolean
        Integer iDbTypeLocal iDbTypeDDO
        Handle hoDD
        Boolean bFrom
        
        Get phoDD to hoDD
        Get piDbType to iDbTypeLocal
        Get pbFrom to bFrom
        If (bFrom = True) Begin
            Get File_Field_Current_Value of hoDD File_Field SncTable.FromDbType to iDbTypeDDO
        End 
        Else Begin
            Get File_Field_Current_Value of hoDD File_Field SncTable.ToDbType to iDbTypeDDO
        End  
        Function_Return (iDbTypeLocal <> iDbTypeDDO) 
    End_Function

    Procedure DoDelegateCancel
        Send CancelWizard
    End_Procedure

    { MethodType=Event }
    Function IsEnabled Returns Boolean
        Function_Return True
    End_Function

    // Enable the idle handler timer when the button is activated
    Procedure Activating
        Forward Send Activating
        Set pbEnabled of (phoIdleHandler(Self)) to True
    End_Procedure

    // Disable the idle handler when the button is deactivated
    Procedure Deactivating
        Set pbEnabled of (phoIdleHandler(Self)) to False
        Forward Send Deactivating
    End_Procedure

    Procedure Refresh Integer iNotifyMode
        Forward Send Refresh iNotifyMode
        Send DoFillData    
    End_Procedure

    Procedure DoCheckClear
        Send Combo_Delete_Data
        Send Combo_Add_Item DATAFLEX_ID 
        Set Value to DATAFLEX_ID
    End_Procedure

    Procedure DoFillData
        Integer iDbType iRetval iRetval2 iFile iField
        Handle hoDD
        Boolean bFrom bChanged_State
        String sDrv1 sDrv2 sDrv1Txt sDrv2Txt sPath sDriverID sDAWTxt sMDSTxt sDrvId1 sDrvId2 sText
        
        Move "" to sDriverID     
        Move EN_DbTypeDataFlex to iDbType
        Get pbFrom to bFrom
        Get phoDD to hoDD
        Get Data_File  to iFile
        Get Data_Field to iField
        If (pbGetHasCurrRowId(hoDD)) Begin
            If (bFrom = True) Begin
                Get File_Field_Current_Value of hoDD File_Field SncTable.FromDbType to iDbType
                Get File_Field_Current_Value of hoDD File_Field SncTable.FromDriver to sDriverID
            End 
            Else Begin
                Get File_Field_Current_Value of hoDD File_Field SncTable.ToDbType to iDbType
                Get File_Field_Current_Value of hoDD File_Field SncTable.ToDriver to sDriverID
            End
            Set piDbType to iDbType 
        End
        Send Combo_Delete_Data

        Case Begin
            Case (iDbType = EN_DbTypeDataFlex)
                Send Combo_Add_Item DATAFLEX_ID
                If (sDriverID = "") Begin
                    Move DATAFLEX_ID to sDriverID                        
                End
                Case Break
            Case (iDbType = EN_dbTypeMSSQL)
                Send Combo_Add_Item MSSQLDRV_ID
                Send Combo_Add_Item ODBC_DRV_ID
                If (sDriverID <> ODBC_DRV_ID) Begin
                    Move MSSQLDRV_ID to sDriverID                        
                End
                Case Break
            Case (iDbType = EN_dbTypeMySQL)
                Send Combo_Add_Item ODBC_DRV_ID
                Move ODBC_DRV_ID to sDriverID                        
                Case Break
            Case (iDbType = EN_dbTypeOracle)
                Send Combo_Add_Item ODBC_DRV_ID
                Move ODBC_DRV_ID to sDriverID                        
                Case Break
            Case (iDbType = EN_dbTypeDB2)
                Send Combo_Add_Item DB2_DRV_ID
                Move DB2_DRV_ID to sDriverID                        
                Case Break
            Case (iDbType = EN_dbTypePostgre)
                Send Combo_Add_Item ODBC_DRV_ID
                Move ODBC_DRV_ID to sDriverID                        
                Case Break
            Case (iDbType = EN_DbTypePervasive)
                Send Combo_Add_Item DFBTRDRV_ID
                Move DFBTRDRV_ID to sDriverID                        
                Case Break
            Case Else
                Send Combo_Add_Item DATAFLEX_ID
                Move DATAFLEX_ID to sDriverID                        
        Case End

        Set Value to sDriverID 
        // Do not trigger a DDO change if this part was reached from a Request_Find
        Get Changed_State of hoDD to bChanged_State
        Set File_Field_Changed_Value of hoDD iFile iField to sDriverID
        Set File_Field_Changed_State of hoDD iFile iField to False
        Set Changed_State of hoDD to bChanged_State
    End_Procedure

End_Class
