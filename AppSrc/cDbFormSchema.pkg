//****************************************************************************
// $Module type: CLASS
// $Module name: cDbFormSchema.pkg
// $Author     : Nils G. Svedmyr
// Created     : 2002-07-21 @ 11:16
//
// Description :
//
// $Rev History
//    2002-07-21  Module header created
//****************************************************************************
Use cRDCDbForm.pkg

Class cDbFormSchema is a cRDCDbForm
    Procedure Construct_Object
        Forward Send Construct_Object
        Property Integer piDbType EN_DbTypeDataFlex
        { InitialValue=True }
        Property Boolean pbFrom   True
        Property Handle  phoDD    (Main_DD(Self))
        Set Entry_msg to DoCheckEntering
    End_Procedure

    Procedure End_Construct_Object
        Forward Send End_Construct_Object
    End_Procedure

    Procedure DoCheckEntering
        // If Not (Enabled_State(Self)) Send Next
    End_Procedure

    Procedure DoEnableDisable Integer iValue
        Set piDbType to iValue
        Set Enabled_State to (iValue > EN_DbTypeDataFlex and iValue < EN_DbTypePervasive)
        Send DoSetDefaults
    End_Procedure

    Procedure DoSetDefaults
        Handle hoDD
        Integer iType iFile iField
        String sValue sLabel sDriverID
        Boolean bFrom

        Get phoDD      to hoDD
        Get pbFrom     to bFrom
        Get piDbType   to iType
        Get Data_File  to iFile
        Get Data_Field to iField
        Get Label      to sLabel
        
        If (bFrom = True) Begin
            Get Field_Current_Value of hoDD Field SncTable.FromDriver to sDriverID
        End
        Else Begin
            Get Field_Current_Value of hoDD Field SncTable.ToDriver   to sDriverID
        End                                                                       

        Case Begin
            Case (iType = EN_DbTypeDataFlex)
                If (sLabel <> "Schema Name") Begin
                    Set Label to "Schema Name"
                End
                Set Status_Help to ("Schema name.")
                Move "" to sValue
                Case Break
            Case (iType = EN_DbTypeDB2)
                If (sLabel <> "Schema Name") Begin
                    Set Label to "Schema Name"
                End
                Set Status_Help to ;
                ("The name of the schema the table belongs to. A schema is a collection of"    * ;
                "names or objects. A schema can contain tables, views, and triggers."         * ;
                "Schemas provide a logical classification of objects in the database. If the" * ;
                "keyword is not set, the user ID used to login to DB2 is used as the schema name.")
                Get Network_User_Name    to sValue
                Move (Uppercase(sValue)) to sValue
                Case Break
            Case (iType = EN_DbTypeMSSQL)
                If (sLabel <> "Owner Name") Begin
                    Set Label to "Owner Name"
                End
                Set Status_Help to ;
                ("Database Owner (dbo). The dbo is a user that has implied permissions to perform all" * ;
                "activities in the database. Any member of the sysadmin fixed server role who uses a" * ;
                "database is mapped to the special user inside each database called dbo. Also, any"   * ;
                "object created by any member of the sysadmin fixed server role belongs to dbo automatically.")
                Move "dbo" to sValue
                Case Break
            Case (sDriverID = ODBC_DRV_ID)
                If (sLabel <> "Schema Name") Begin
                    Set Label to "Schema Name"
                End
                Set Status_Help to ("Schema name.")
                Move "" to sValue
                Case Break
            Case (iType = EN_DbTypeOracle)
                If (sLabel <> "Schema Name") Begin
                    Set Label to "Schema Name"
                End
                Set Status_Help to ("Schema name.")
                Get Network_User_Name to sValue
                Case Break
            Case (iType = EN_DbTypePervasive)
                If (sLabel <> "Schema Name") Begin
                    Set Label to "Schema Name"
                End
                Set Status_Help to ("Schema name.")
                Move "" to sValue
                Case Break
            Case Else
                If (sLabel <> "Schema Name") Begin
                    Set Label to "Schema Name"
                End
                Set Status_Help to ("Schema name. See the various database formats for more specific help.")
                Move "" to sValue
                Case Break
        Case End

        If not (pbGetHasCurrRowId(hoDD)) Begin
            Set File_Field_Changed_Value of hoDD iFile iField to sValue
        End
    End_Procedure

End_Class
