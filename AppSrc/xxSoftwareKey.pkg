//****************************************************************************
// $Module type: Package
// $Module name: xxSoftwareKey.pkg
// $Author     : Nils Svedmyr
// Created     : 2003-04-28 @ 16:26
//
// COPYRIGHT (c) 2003-2006 RDC Tools International
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; version 2
// of the License.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program; (See the GPL.txt file in the Help directory) if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

// Description :
//
// $Rev History:
//    2003-04-28  Module header created
//    2006-11-08  Removed everything that had to do with SoftwareKey copy protection.
//
//****************************************************************************
// Better cryptation for passwords:
#IF (!@ < 200)
    Use cCryptographer.pkg
#ELSE      
    Use cCryptographerEx.pkg
#ENDIF
Use vWin32fh.pkg

//Define cs_PwInit for ("RO9"+String("2SV5")+String("5NIO")+String("8ED0")+String("2MYR"))
//Define c1        for 52845  // Do not change
//Define c2        for 22719  // Do not change

//#COMMAND CHECK_APPLICATION R R
//    !A [] $2ec !1 !2
//#ENDCOMMAND

Function TodaysDateMilitary Global Returns String
    Integer iDateFormat
    String sRetval
    Date   dToday
    Get_Attribute DF_Date_Format  to iDateFormat              // Save the current format
    Set_Attribute DF_Date_Format  to DF_DATE_MILITARY         // Set to YYYY-MM-DD
    Sysdate                          dToday
    Move dToday                   to sRetval
    Set_Attribute DF_Date_Format  to iDateFormat              // Reset the date format.
    Function_Return sRetval
End_Function

Define CS_HashString For "1E345F18-FC3B-492D-B22D-E18ABBDC7BE9"

Function CMEncryptPassword Global String sPassword Returns String
    String sRetval
    Handle hoLoginEncryption

    Move (Trim(sPassword)) to sPassword
    Get Create (RefClass(cLoginEncryption)) to hoLoginEncryption
    Set psEncryptPassword of hoLoginEncryption to CS_HashString
    Get EncryptPassword of hoLoginEncryption sPassword to sRetval
    Send Destroy of hoLoginEncryption

    Function_Return sRetval
End_Function

Function CMDecryptPassword Global String sPassword Returns String
    String sRetval
    Handle hoLoginEncryption

    Move (Trim(sPassword)) to sPassword
    Get Create (RefClass(cLoginEncryption)) to hoLoginEncryption
    Set psEncryptPassword of hoLoginEncryption to CS_HashString
    Get DecryptPassword of hoLoginEncryption sPassword to sRetval
    Send Destroy of hoLoginEncryption

    Function_Return sRetval
End_Function

// Takes a string as argument.
// Returns: True if all is date.
//          False if string contains any other than digits.
#IFNDEF IsDate
Function IsDate String sDate Returns Boolean
    Boolean bIsDate
    String sGoodCharacters sChar
    Integer iCount iLength

    Move True to bIsDate
    Move "0123456789-/" to sGoodCharacters
    Move (Length(sDate)) to iLength
    For iCount From 1 to iLength
        Move (Left(sDate, 1)) to sChar
        Move (Mid(sDate, 12, 2)) to sDate
        Move (sGoodCharacters contains sChar) to bIsDate
        If (bIsDate = False) Begin
            Move iLength to iCount
        End
    Loop
    Function_Return bIsDate
End_Function
#ENDIF

// Arguments: String with Characters/words separated with the sSep character
//            Integer is the posisition of the substring.
// Returns:   The substring denoted by the iField parameter.
// Note:      The string should have no leading or trailing "sSep" characters.
Function ExtractVal Global String sString String sSep Integer iField Returns String
    Integer iStart iEnd iCount
    String sRetval
    If Not (sString Contains sSep) Begin
        Function_Return sString // Nothing to do.
    End
    Move (sSep - String(sString) - String(sSep)) to sString
    For iCount From 1 to (iField - 1)
        Move (Replace(sSep, sString, ""))          to sString
    Loop // For iCount from 1 to iField
    Move (Pos(sSep, sString))                    to iStart
    Move (Replace(sSep, sString, ""))            to sString
    Move (Pos(sSep, sString))                    to iEnd
    //Showln "iStart = " iStart " iEnd = " iEnd
    Move (Mid(sString, (iEnd - iStart), iStart)) to sRetval
    Function_Return sRetval
End_Function
