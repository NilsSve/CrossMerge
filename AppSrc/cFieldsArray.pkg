//****************************************************************************
// $Module type: CLASS
// $Module name: cFieldsArray
// $Author     : Nils G. Svedmyr
// Created     : 2001-08-08 @ 16:00
//
// Description : Array to keep field numbers of iFromFile and iToFile
//
// $Rev History
//    2001-08-08  Module header created
//****************************************************************************
Use SyncFuncs.pkg

Class cFieldsArray is an Array

    Procedure Construct_Object
        Forward Send Construct_Object
        Property Handle phoFieldTypeArray 0
        Property Handle phoAppendArray    0
    End_Procedure

    Procedure End_Construct_Object

        Forward Send End_Construct_Object
    End_Procedure

    Procedure DoFillArray Integer iFromFile  Integer iFromStartField Integer iFromStopField Integer iToFile Integer iToStartField ;
        Integer iSynchType String sSelFromFields   String  sSelToFields   Integer iSelFieldCount
        Integer iFrField iToField iFields iCount iStart iExtra iPos
        Integer iField
        String sFromDriver sToDriver
        Handle hoFieldTypeArray hoAppendArray
        String sFieldName sAppend

        Send Delete_Data  // Delete old array items.
        Get phoFieldTypeArray to hoFieldTypeArray
        Get phoAppendArray    to hoAppendArray
        If hoFieldTypeArray Begin
            Send Delete_Data of hoFieldTypeArray
        End
        If hoAppendArray Begin
            Send Delete_Data of hoAppendArray
        End

        Case Begin              // Figure out start field and number of fields:
            Case (iSynchType = 1) // "Matching Field Names"
                Get_Attribute DF_FILE_NUMBER_FIELDS of iFromFile to iFields
                Get_Attribute DF_FILE_DRIVER        of iFromFile to sFromDriver
                Get_Attribute DF_FILE_DRIVER        of iToFile   to sToDriver
                If (sFromDriver = DATAFLEX_ID) Begin
                    Move 0 to iStart
                    If (sToDriver <> DATAFLEX_ID) Begin
                        Increment iFields // Needed, else the last ToTable field does not get updated.
                    End
                    Else If (sToDriver = DATAFLEX_ID) Begin
                        Move 1 to iStart
                    End
                End
                Else Begin
                    Move 1 to iStart
                End
                Case Break
            Case (iSynchType = 2) // "Range of Field Numbers"
                Move iFromStartField to iStart
                Move (iFromStopField - iFromStartField +1) to iFields
                If (iFromStartField <> iToStartField) Begin
                    Move (iToStartField - iFromStartField) to iExtra
                End
                Case Break
            Case (iSynchType = 3) // "Selected Fields Numbers"
                Move iSelFieldCount                       to iFields
                Move (Pos(" ", sSelFromFields))           to iPos
                Move (Mid(sSelFromFields, (iPos - 1), 1)) to iStart // Get the first field number
                Case Break
            Case Else
                Error DfErr_Operator ("Wrong Field Selection Type specified for table number:" * String(iFromFile))
                Procedure_Return
        Case End

        If (iStart = 0) Begin
            Decrement iFields
        End

        For iCount From iStart to iFields
            Case Begin
                Case (iSynchType = 1) // "Matching Field Names"
                    Move iCount                  to iFrField
                    Get_Attribute DF_FIELD_NAME  of iFromFile iCount to sFieldname
                    Move False to Err
                    Get FieldMap iToFile sFieldName to iToField
                    If (Err) Begin
                        Move -1 to iToField
                    End
                    Case Break
                Case (iSynchType = 2) // "Range of Field Numbers"
                    Move iCount            to iFrField
                    Move (iCount + iExtra) to iToField
                    Case Break
                Case (iSynchType = 3) // "Selected Field Numbers"
                    // From Fields:
                    Move (Pos(" ", sSelFromFields)) to iPos
                    If (iPos = 0) Begin
                        Move (Trim(sSelFromFields)) to iFrField
                        Move "" to sSelFromFields
                    End
                    Else Begin
                        Move (Mid(sSelFromFields, (iPos - 1), 1))                    to iFrField       // Get the field number
                        Move (Replace((String(iFrField) + " "), sSelFromFields, '')) to sSelFromFields // and remove it from the string.
                    End
                    If (iFrField < 0) Begin                                                              // If negative, field value will be appended to previous field number value.
                        Move (String(Abs(iFrField))) to sAppend
                        Repeat
                            Move (Pos(" ", sSelFromFields)) to iPos   // *** APPEND LOGIC DOES NOT WORK ???!!!
                            If iPos Begin
                                Move (Mid(sSelFromFields, (iPos - 1), 1)) to iField
                                If (iField < 0) Begin
                                    Move (Replace((String(iField) + " "), sSelFromFields, '')) to sSelFromFields
                                    Move (String(sAppend) * String(Abs(iField)))               to sAppend  // Convert to positive field number.
                                End
                            End
                        Until (iField > -1 or not(iPos))
                        If hoAppendArray Begin
                            Set Array_Value of hoAppendArray Item (Item_Count(hoAppendArray)) to sAppend
                        End
                        Move 0  to iFrField
                        Move -1 to iToField
                        Decrement iCount
                    End
                    Else Begin // Then save field to array
                        If hoAppendArray Begin
                            Set Array_Value of hoAppendArray Item (Item_Count(hoAppendArray)) to 0
                        End
                        // To Fields:
                        Move (Pos(" ", sSelToFields)) to iPos
                        If (iPos = 0) Begin
                            Move (Trim(sSelToFields)) to iToField
                            Move "" to sSelToFields
                        End
                        Else Begin
                            Move (Mid(sSelToFields, (iPos - 1), 1)) to iToField       // Get the field number
                            Move (Replace((String(iToField) + " "), sSelToFields, '')) to sSelToFields   // and remove it from the string.
                        End
                    End
                    Case Break

            Case End
            If (iToField >= 0) Begin
                Set Array_Value Item (Item_Count(Self)) to iFrField // iFromFile field number
                Set Array_Value Item (Item_Count(Self)) to iToField // iToFile field number
            End
        Loop
    End_Procedure

    Function FieldMap Integer iFile String sFieldName Returns String
        Integer iFields iField iStart
        String sTableFieldName sDriver

        Move (Uppercase(sFieldName))           to sFieldName
        Get_Attribute DF_FILE_DRIVER of iFile  to sDriver
        If (sDriver = DATAFLEX_ID) Begin
            Move 0 to iStart      // Then start at Recnum.
        End
        Else Begin
            Move 1 to iStart
        End

        Get_Attribute DF_FILE_NUMBER_FIELDS of iFile to iFields
        For iField From iStart to iFields
            Get_Attribute DF_FIELD_NAME of iFile iField to sTableFieldName
            If (Uppercase(sTableFieldName) = sFieldName) Begin
                Function_Return iField
            End
        Loop
        Move False to Err
        Function_Return -1
    End_Function

    Procedure Dump
        Integer iCount iItems iFromVal iToVal
        Get Item_Count to iItems
        Showln "Fields array values:"
        For iCount From 0 to (iItems -1)
            Get Integer_Value Item iCount to iFromVal
            Increment iCount
            Get Integer_Value Item iCount to iToVal
            Showln "iFromVal = " iFromVal " iToVal   = " iToVal
        Loop
        Showln ""
    End_Procedure

End_Class
