// COPYRIGHT (c) 2001-2006 RDC Tools International
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; version 2
// of the License.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program; (See the GPL.txt file in the Help directory) if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
Use DFAllEnt.pkg
Use cCJStandardCommandBarSystem.pkg
Use cCJCommandBarSystem.pkg
Use cToolTipController.pkg

Use cDigitalSoftwareCertificate.pkg

Object oDigitalSoftwareCertificate is a cDigitalSoftwareCertificate
    Move Self to ghoDigitalSoftwareCertificate

    // Set pbWarnIfNotDigitallySigned = True if you like to have a warning when the
    // program is started, but the program has not been digitally signed.
    // Only applies when run outside the Studio.
    Set pbWarnIfNotDigitallySigned to False

    // This message does the actual checking for a valid digital certificate.
    // If the program has been tampered with e.g. it has been infected by a virus,
    // the user will get a warning and the program will be aborted.
    //Send ValidateProgramOnStartup

End_Object

Object oHtmlHelp is a cHtmlHelp
    Set pbAlwaysOnTop to False
End_Object

Use cApplication.pkg
//Compiler_Desktop_Method_Warnings On

Send Ignore_Error of Error_Info_Object 4255 // "Can't load DLL"
Use Statpnl.pkg

Object oApplication is a cApplication
    Set peHelpType   to htHtmlHelp
    Set psCompany    to "RDC Tools International"
    Set psProduct    to "CrossMerge"
    Set psProgram    to "Engine"
    Set psVersion    to "2025"
    Set psHelpFile   to "CrossMerge.chm"
    Set pbPreserveEnvironment to True
    //    Set pbEnterKeyAsTabKey    to False

    Property String  psSerial ""
    Property String  psName ""
    Property String  psLicenseType "FREE VERSION"
    Property String  psOrgCollectionName ""
    Property String  psDefaultCollection ""
    Property String psGridRowBackgroundColor ""
    
//    Property Integer piUsers 0
//    Property Integer piLicenseType 0
//    Property String  psActivationDaysText ""
//    Property Handle  phoSDIView 0    // Set by SDI view object
//    Property Integer piDaysLeft 0
//    Property Integer piUserCode1 0
//    Property Integer piUserCode2 0
//    Property Integer piActivationDaysLeft 0
//    Property Boolean pbActivated False
//    Property Handle  phoSynchGrid 0
//    Property Handle  phoLfile 0
//    Property Handle  phoXmlHttpTransfer   0
    Property Boolean pbCMBuilderMode False

    Procedure OnCreate
        Handle hoCmdLine
        Integer iNumArgs
        String sDefaultCollection sRegName sRegNumber

        Registration sRegName sRegNumber
        Set psName   to sRegName
        Set psSerial to sRegNumber

        // Allow a 'Collection Name' to be passed on the command line.
        // If the passed name is found in file SncSchem, the default Scheme Name in the system file
        // (SncSys.Default_Scheme) will get changed: (which is necessary for the logic to work, if run un-attended)
        // However, it will get reset when the program is closed.
        Get phoCommandLine              to hoCmdLine
        Get CountOfArgs of hoCmdLine    to iNumArgs
        Get Argument    of hoCmdLine 1  to sDefaultCollection
        Set psDefaultCollection         to (Trim(sDefaultCollection))
    End_Procedure

End_Object

Use Startup.pkg
//Send Destroy of (oSplashScreen(Self))  // Remove splash screen
//Use cCJSkinFramework.pkg
//Object oCJSkinFramework is a cCJSkinFramework
//    Set psSkinFile to "iTunesB.cjstyles"
//    Set psSkinIni to "Square Buttons Light.ini"
//    Procedure OnCreate
//        Forward Send OnCreate
////        Send ComRemoveWindowClass "DFBaseToolpanel"
//    End_Procedure
//End_Object

//Use xxSoftwareKey.pkg  // Modified version of Software Key's copy protection package.
//Use Cli.pkg
//Use Working.pkg
//Use SyncFuncs.pkg
//Use ShellExecute.pkg
//Use Start_UIExcl.pkg // Do only allow one instance of the program running.

Send Ignore_Error of Error_Object_Id DFERR_CANT_LOAD_DLL

Use cReindex.pkg
Object oReindex is a cReindex // Checks if tables needs reindexing.
    Set piCheckFile to 82
End_Object

Use cDbUpdateHandler.pkg
Object oDbUpdateHandler is a cDbUpdateHandler
    Set pbAutoCreateDbVersionTable to True  // Automatically creates the DbVersion table when the program is started.
    Set piDbVersionFileNumber  to 249
    Set piDbVersionFieldNumber to 1
    Set pbUseIntFilesBackup to True
    Set piIntFilesFileNumber to 250
    Set pbCheckDataFlexUserCount to False
    Set psDriverID to DATAFLEX_ID
    Set piDbType to EN_DbTypeDataFlex
    Set pbExitIfDebuggerActive to False
End_Object

Use CMStatPnl.pkg

Object oToolTipController is a cToolTipController
    Move Self to ghoToolTipController
    Set piIcon to TTI_INFO
    Set psTitle to "Info"
    Set piMaxWidth to 250
    Set piDurationPopup to 14000    // 14 seconds, needed for long tooltips.
    Set pbUsePrefix to True
End_Object

Use cCJSkinFramework.pkg
Object oCJSkinFramework is a cCJSkinFramework
    Set psSkinFile to "iTunesB.cjstyles"
    Set psSkinIni to "Square Buttons Light.ini"
    
    Procedure ApplySkin
        Boolean bUseSkin 
        String sProgram                                                     

        Get psProgram of ghoApplication to sProgram
        Set psProgram of ghoApplication to "Builder"
        Get ReadDword of ghoApplication "Preferences" "UseSkin" "0" to bUseSkin
        Set psProgram of ghoApplication to sProgram
        If (bUseSkin = False) Begin
            Procedure_Return
        End
        Forward Send ApplySkin
    End_Procedure
        
End_Object

Use oEditContextMenu.pkg
Use oDEOEditContextMenu17.pkg

Object oMain is a Panel
    Set Label to (psProduct(ghoApplication) * psProgram(ghoApplication) * " - " + psLicenseType(ghoApplication))
    Set Size to 250 480
    Set Locate_Mode  to Center_On_Screen
    Set piMinSize to 250 480

    Object oCommandBarSystem is a cCJCommandBarSystem
        Set pbTimerUpdate to True
        #IF (!@ >= 190)
            Set pbAutoResizeIcons to True
            Set pbTabbedWorkspaces to True // Switch on for DF 19 to see the new tabbed-view look.
            Set peVisualTheme to xtpThemeOffice2016Word
            Set pbLargeIcons to True
        #ENDIF

        Procedure OnCreateCommandBars
            Integer eTheme    
            Handle hoOptions
            Send DoChangeToolTipFormat
            #IF (!@ < 190)
                Send DisplayTabWorkspace
            #ELSE
                Get OptionsObject to hoOptions
                Send ComSetIconSize of hoOptions False 32 32  // Set icon size for Toolbar buttons.
            #ENDIF     
        End_Procedure

    #IF (!@ < 190)
        Procedure DisplayTabWorkspace
            Variant vTab vPaintManager
            Handle hoTab hoPaintManager hoOptions
            Integer iSize

            If (not(IsComObjectCreated(Self))) Begin
                Procedure_Return
            End

            Get OptionsObject to hoOptions
            Move 32 to iSize
            Send ComSetIconSize of hoOptions False iSize iSize  // Set icon size for Toolbar buttons.

            // Create the tab workspace object. It will get created for the Client_Area so
            // each view will be displayd on a separate tab-page (instead of the standard VDF MDI-interface)
            Get Create (RefClass(cCJTabWorkspace)) to hoTab
            Get ComShowTabWorkspace True to vTab
            // Connect the CodeJock side to the DataFlex proxy object.
            Set pvComObject  of hoTab to vTab

            Set ComFlags of hoTab to xtpWorkspaceHideAll
            Send ComEnableGroups of hoTab

            // Create a paint manager object that is needed to set some
            // of the tab-workspace properties.
            Get Create (RefClass(cCJTabPaintManager)) to hoPaintManager
            Get ComPaintManager of hoTab          to vPaintManager
            Set pvComObject     of hoPaintManager to vPaintManager
            // This will truncate the middle part of long items
            //            Set ComDrawTextPathEllipsis of hoPaintManager to True
            //            Set ComLayout               of hoPaintManager to xtpTabLayoutMultiRow
            // Sets the tab-pages to display on the left side, instead of at the top:
            //            Set ComPosition     of hoPaintManager to xtpTabPositionLeft

            //            Move 24 to iSize
            //            Send ComSetIconSize of hoPaintManager  iSize iSize  // Set icon size for Tab-workspace.
            //            Move 24 to iSize
            //            Send ComSetIconSize         of hoPaintManager  iSize iSize  // Set icon size for Tab-workspace.

            Send ComRecalcLayout
            Send Destroy of hoTab
            Send Destroy of hoPaintManager
        End_Procedure
#ENDIF
        Procedure SetTheTheme Integer eTheme
            Set peVisualTheme of ghoCommandBars to eTheme
            Send ComRecalcLayout of ghoCommandBars
            //            Get ComGetSpecialColor of ghoCommandBars STDCOLOR_WINDOWFRAME to iColor
            //            Broadcast Recursive Set Color of (Client_Id(phoMainPanel(ghoApplication))) to iColor
        End_Procedure

        Procedure DoChangeToolTipFormat
            Variant vToolTip
            Handle  hoObject
            Integer eTheme iToolTipStyle
            Boolean bIsBalloonStyleSupported

            Get ComToolTipContext to vTooltip
            Get Create (RefClass(cCJToolTipContext)) to hoObject
            Set pvComObject of hoObject to vTooltip
            Move xtpToolTipOffice2007 to iToolTipStyle
            If (iToolTipStyle = -1) Begin
                Get peVisualTheme to eTheme
                Set ComStyle of hoObject to eTheme
            End
            Else Begin
                // Baloon tooltip style requires IE 5.0 or later, so check if installed.
                // The ComShowTitleAndDescription also requires IE 5.0.
                Get ComIsBalloonStyleSupported of hoObject to bIsBalloonStyleSupported
                If (bIsBalloonStyleSupported = False) Begin
                    // If not supported we cannot show baloon tooltip; use standard style instead.
                    If (iToolTipStyle = xtpToolTipBalloon) Begin
                        Move xtpToolTipStandard to iToolTipStyle
                    End
                End
                Set ComStyle of hoObject to iToolTipStyle
                If (bIsBalloonStyleSupported = True) Begin
                    Send ComShowTitleAndDescription of hoObject True xtpToolTipIconInfo
                End
            End
            Set  ComShowOfficeBorder        of hoObject to True
            Set  ComShowShadow              of hoObject to True
            // Set the max width for a tooltip. 250 just seems to be a good
            // compromise. After 250 pixels the text will wrap to the next line automatically.
            Set  ComMaxTipWidth             of hoObject to 250 // In pixels
            Send Destroy of hoObject
            If (phoStatusBar(ghoCommandBars)) Begin
                Send DoChangeToolTipFormat of (phoStatusBar(Self))
            End
        End_Procedure

        Procedure OnCreateTabbedWorkspace Handle hoTabWorkspace Handle hoTabPaintManager
            Set ComShowIcons of hoTabPaintManager to True
    
            // This will truncate the middle part of long items
            Set ComDrawTextPathEllipsis of hoTabPaintManager to True
        End_Procedure

        Object oMain_Toolbar is a cCJToolbar
            Set psTitle to "Main ToolBar"
            Set peStretched to stStretchShared

            Object oStart_CMEngine_MenuItem is a cCJMenuItem
                Set psCaption to "Start Engine"
                Set psDescription to "Run Engine"
                Set psToolTip to "Start the CrossMerge Engine"
                Set psImage to "RunProgram.ico"
                Set pbControlBeginGroup to True
                Set peControlStyle to xtpButtonIconAndCaption
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send DoStartEngine of (oRdcViewCollections(Client_Id(ghoCommandBars)))
                End_Procedure
            End_Object

            Object oSetup_MenuItem is a cCJMenuItem
                Set psCaption to "Con&figure"
                Set psToolTip to "Configure"
                Set psDescription to "Configure the CrossMerge Engine Program."
                Set psImage to "Configure.ico"
                Set pbControlBeginGroup to True
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send Popup of (oCmEngineSettings_dg(Client_Id(ghoCommandBars)))
                End_Procedure
            End_Object

        End_Object

        Object oHelp_Toolbar is a cCJToolbar
            Set psTitle to "Help ToolBar"
            Set peStretched to stStretchShared

            Object oViewLogFile_MenuItem is a cCJMenuItem
                Set psCaption to "View Logfile"
                Set psToolTip to "View Log records created by the CrossMerge Engine"
                Set psDescription to "View Log records created by the CrossMerge Engine"
                Set psImage to "Report.ico"
                Set pbControlBeginGroup to True
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send Deactivate of (oConnectViewLog(Client_Id(ghoCommandBars)))
                    Send Popup_Modal of (oConnectViewLog(Client_Id(ghoCommandBars)))
                End_Procedure
            End_Object

            Object oAbout_MenuItem is a cCJMenuItem
                Set psCaption to "A&bout"
                Set psDescription to "About the program"
                Set psToolTip to "About (Alt+B)"
                Set psImage to "ActionAbout1.ico"
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send Activate_About of (Client_Id(ghoCommandBars))
                End_Procedure
            End_Object

            Object oKoFi_MenuItem is a cCJMenuItem
                Set psCaption to "Ko-fi"
                Set psToolTip to "Bye me a coffee, to support me"
                Set psDescription to "Bye me a coffee"
                Set psImage to "Ko-fi.ico"
                Set pbControlBeginGroup to True
                Procedure OnExecute Variant vCommandBarControl
                    Runprogram Shell Background "https://ko-fi.com/nilss"
                End_Procedure
            End_Object

            Object oHelpMenuItem is a cCJHelpMenuItem
                Set peControlType to xtpControlSplitButtonPopup
                Set psCaption to "&Help"
                Set psImage to "ActionHelp1.ico"
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send DoDisplayKeyword of ghoHtmlHelp "CrossMerge Engine Connect Tab Page"
                End_Procedure

                Object oHelpMenuItemLocal is a cCJMenuItem
                    Set psCaption to "Local Help"
                    Set psImage to "ActionHelp1.ico"
                    Procedure OnExecute Variant vCommandBarControl
                        Send Help
                    End_Procedure
                End_Object

                Object oHelpMenuItemInternetBrowser is a cCJMenuItem
                    Set psCaption to "Online HTML Help"
                    Set psImage to "ActionHelpInternet.ico"
                    Procedure OnExecute Variant vCommandBarControl
                        Runprogram Shell Background "https://www.rdctools.com/HTMLHelpCMOS/UsingtheCrossMergeEngine.html"
                    End_Procedure

                End_Object

            End_Object

            Object oExitMenuItem is a cCJExitMenuItem
                Set psImage to "Exit.ico"
                Set psToolTip to "Exit the program (Alt+F4)"
                Set pbControlBeginGroup to True
            End_Object

        End_Object

        Object oStatusBar is a cCJStatusBar

            Object oStatusPane1 is a cCJStatusBarPane
                Set piID to sbpIDIdlePane
                Set pbStyleStretch to True
            End_Object

        End_Object

    End_Object

    Object oClientArea is a ClientArea
//        Use DD_Debug.dg
        Use CmEngineSettings.dg
        Use CheckDSN.pkg          // Check for necessary ODBC DSN's
        Use xxSoftwareKey.pkg 
        Use Working.pkg           // RDC "Working..." panel object
        Use SyncFuncs.pkg
        Use DFSYesNoCancel.dg     // Better data_loss message. Yes/No/Cancel.
        
        Use CmBuilderCollections.vw
        Use ViewLogFile.vw
        
        Use StdAbout.pkg
        Procedure Activate_About
            Send DoAbout "" "" ("Copyright 2001-2020" * psCompany(ghoApplication)) "Created By: Nils Svedmyr" "CmEngine.bmp" "Website: http://www.rdctools.com" "E-mail: mailto:support@rdctools.com" "This is a FREE PROGRAM WITH NO SUPPORT. Send an email to the address above TO BUY A LICENSE WITH LIFETIME SUPPORT AND UPDATES for only $395." "'CrossMerge', 'CrossMerge Builder' and 'CrossMerge Engine' are trademarks of RDC Tools International." ("This tool was created with DataFlex" * String(C_DFVersion) * "from Data Access Worldwide. Please visit http://www.dataaccess.com for a free personal copy of DataFlex.")
        End_Procedure

        Procedure ShowProgramHelp
            Send DoDisplayKeyword of ghoHtmlHelp "CrossMerge Engine Connect Tab Page"
        End_Procedure

        // We do not allow closing of a view - it just doesn't make
        // sense with a tabbed interface.
        Function Exit_Loss_Confirmation for cUIObject Returns Integer
            Function_Return 1
        End_Function

        On_Key Key_F1 Send ShowProgramHelp
    End_Object

    Function Item_Count Returns Integer
    End_Function

    On_Key Key_Ctrl+Key_Tab           Send Switch_Next_View
    On_Key Key_Ctrl+Key_Shift+Key_Tab Send Switch_Prior_View
End_Object

//Send Activate_oConnectViewLog     of (Client_Id(phoMainPanel(ghoApplication)))
Send Activate_oRdcViewCollections of (Client_Id(phoMainPanel(ghoApplication)))

If (psDefaultCollection(ghoApplication) <> "") Begin
    Open SncSys
    Open SncSchem
    Move (psDefaultCollection(ghoApplication))         to SncSchem.Name
    Find Eq SncSchem.Name
    If (Found) Begin
        Set psOrgCollectionName of ghoApplication      to (Trim(SncSys.Default_Scheme)) // Save it to be able to reset it before closing program.
        Reread SncSys
            Move (psDefaultCollection(ghoApplication)) to SncSys.Default_Scheme
            Move 1                                     to SncSys.AutoStart
            SaveRecord SncSys
        Unlock
    End
End

Send Destroy of (oSplashScreen(Self))  // Remove splash screen
Start_UI
